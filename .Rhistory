}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
head(boot_t_stats)
mean_diffs <- boot_t_stats[3, ]
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_alt <- boot_t_stats[1, ]
plot(density(t_alt), lwd = 2, col = 'blue',
main = 'Alternative and Null Distributions of t')
t_null <- boot_t_stats[2, ]
plot(density(t_null))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
legend(-7, 0.5, c('t_alt', 't_null'), lwd = c(2, 1), lty = c(1, 2),
col = c('blue', 'black'))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
legend(-6, 0.5, c('t_alt', 't_null'), lwd = c(2, 1), lty = c(1, 2), bty = 'n',
col = c('blue', 'black'))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
legend(-6, 0.4, c('t_alt', 't_null'), lwd = c(2, 1), lty = c(1, 2), bty = 'n',
col = c('blue', 'black'))
t_alt_ci_95 <- quantile(t_alt, probs = c(0.025, 0.975))
abline(v = t_alt_ci_95, lty = 3)
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
abline(v = t_alt_ci_95, lty = 3)
legend(-6, 0.4, c('t_alt', 't_null', 't_alt_ci_95'), lwd = c(2, 1, 1), lty = c(1, 2, 3),
bty = 'n', col = c('blue', 'black', 'black'))
t_alt_ci_95
quantile(t_null, probs = c(0.025, 0.975))
mean(t_alt)
median(alentus_omit_outliers) < median(hostmonster)
boot_median_diffs <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
median_diff <- abs(median(resample0) - median(resample1))
median_null_diff <- abs(median(resample0) - median(sample0))
return(c(median_diff, median_null_diff))
}
median_diffs <- replicate(10000, boot_median_diffs(alentus_omit_outliers, hostmonster))
median_diff <- median_diffs[1, ]
mean(median_diff)
boot_median_diffs <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
median_diff <- median(resample0) - median(resample1)
median_null_diff <- median(resample0) - median(sample0)
return(c(median_diff, median_null_diff))
}
median_diffs <- replicate(10000, boot_median_diffs(alentus_omit_outliers, hostmonster))
median_diff <- median_diffs[1, ]
mean(median_diff)
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- t.test(resample0, resample1, var.equal = FALSE)
t_stat_null <- t.test(resample0, sample0, var.equal = FALSE)
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt$statistc, t_stat_null$statistic, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
mean_diffs <- boot_t_stats[3, ]
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- t.test(resample0, resample1, var.equal = FALSE)
t_stat_null <- t.test(resample0, sample0, var.equal = FALSE)
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt$statistic, t_stat_null$statistic, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
mean_diffs <- boot_t_stats[3, ]
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_alt <- boot_t_stats[1, ]
t_null <- boot_t_stats[2, ]
t_alt_ci_95 <- quantile(t_alt, probs = c(0.025, 0.975))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
library(data.table)
health_media1 <- fread('../6-health-media1.csv')
health_media2 <- fread('../6-health-media2.csv')
health_media3 <- fread('../6-health-media3.csv')
health_media4 <- fread('../6-health-media4.csv')
mean(c(health_media1$INTEND.0, health_media2$INTEND.0))
sapply(c(health_media1$INTEND.0, health_media2$INTEND.0), mean)
sapply(cbind(health_media1$INTEND.0, health_media2$INTEND.0), mean)
sapply(cbind(health_media1$INTEND.0, health_media2$INTEND.0, na.rm = TRUE), mean)
sapply(cbind(health_media1$INTEND.0, health_media2$INTEND.0), mean, na.rm = TRUE)
mean(health_media1$INTEND.0)
mean(health_media2$INTEND.0)
mean(health_media3$INTEND.0)
mean(health_media4$INTEND.0)
intend0 <- cbind.data.frame(health_media1$INTEND.0, health_media2$INTEND.0,
health_media3$INTEND.0, health_media4$INTEND.0)
intend0 <- c(health_media1$INTEND.0, health_media2$INTEND.0, health_media3$INTEND.0,
health_media4$INTEND.0)
intend0 <- matrix(health_media1$INTEND.0, health_media2$INTEND.0, health_media3$INTEND.0,
health_media4$INTEND.0)
intend0 <- list(health_media1$INTEND.0, health_media2$INTEND.0, health_media3$INTEND.0,
health_media4$INTEND.0)
sapply(intend0, mean)
sapply(intend0, length)
max(sapply(intend0, length))
intend0_nrow <- max(sapply(intend0, length))
intend0 <- sapply(intend0, function(x) c(x, rep(NA, intend0_nrow - length(x))))
intend0 <- as.data.frame(intend0)
View(intend0)
sapply(intend0, mean)
sapply(intend0, mean, na.rm = TRUE)
View(intend0)
colnames(intend0) <- c('health_media1', 'health_media2', 'health_media3', 'health_media4')
View(intend0)
boxplot(rev(intend0), horizontal = TRUE)
boxplot(rev(intend0), horizontal = TRUE, las = 2)
boxplot(rev(intend0), horizontal = TRUE, las = 3)
boxplot(rev(intend0), horizontal = TRUE, las = 4)
boxplot(rev(intend0), horizontal = TRUE, las = 1)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE)
boxplot(rev(intend0), horizontal = TRUE, las = 1, boxwex = 0.6,
main = 'Distribution of Intention to Share across All 4 Media')
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
main = 'Distribution of Intention to Share across All 4 Media')
boxplot(rev(intend0), horizontal = TRUE, las = 1, boxwex = 0.6,
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE)
par(mar = c(5, 11, 5, 1))
boxplot(rev(intend0), horizontal = TRUE, las = 1, boxwex = 0.6,
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE)
par(mar = c(1, 1))
par(mfrow = c(1, 1))
boxplot(rev(intend0), horizontal = TRUE, las = 1, boxwex = 0.6,
main = 'Distribution of Intention to Share across All 4 Media')
par(mar = c(1, 1, 1, 1))
boxplot(rev(intend0), horizontal = TRUE, las = 1, boxwex = 0.6,
main = 'Distribution of Intention to Share across All 4 Media')
health_media1 <- fread('../6-health-media1.csv')
health_media2 <- fread('../6-health-media2.csv')
health_media3 <- fread('../6-health-media3.csv')
health_media4 <- fread('../6-health-media4.csv')
intend0 <- list(health_media1$INTEND.0, health_media2$INTEND.0, health_media3$INTEND.0,
health_media4$INTEND.0)
intend0_nrow <- max(sapply(intend0, length))
intend0 <- sapply(intend0, function(x) c(x, rep(NA, intend0_nrow - length(x))))
intend0 <- as.data.frame(intend0)
colnames(intend0) <- c('health_media1', 'health_media2', 'health_media3', 'health_media4')
boxplot(rev(intend0), horizontal = TRUE, las = 1, boxwex = 0.6,
main = 'Distribution of Intention to Share across All 4 Media')
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('1', '2', '3', '4'),
main = 'Distribution of Intention to Share across All 4 Media')
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'),
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.15)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.5)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.1)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.8)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.08)
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.09)
abline(v = mean(sapply(intend0, mean)), col = 'red', lwd = 2)
abline(v = mean(sapply(intend0, mean)))
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
abline(v = mean(sapply(intend0, mean)))
mean(sapply(intend0, mean))
boxplot(rev(intend0), horizontal = TRUE, las = 1, xlab = 'INTEND.0', ylab = 'health_media',
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share across All 4 Media')
abline(v = mean(sapply(intend0, mean, na.rm = TRUE)), col = 'red', lwd = 2)
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.08)
boxplot(rev(intend0), horizontal = TRUE, xlab = 'INTEND.0', ylab = 'health_media', las = 1,
names = c('4', '3', '2', '1'), medcol = 'blue',
main = 'Distribution of Intention to Share Across All 4 Media')
stripchart(rev(intend0), method = 'stack', add = TRUE, offset = 0.08)
abline(v = mean(sapply(intend0, mean, na.rm = TRUE)), col = 'red', lwd = 2)
intend0 <- as.data.table(intend0)
intend0
reshape(intend0)
reshape(intend0, direction = 'long')
library(reshape2)
melt(intend0)
View(melt(intend0))
health_media1 <- fread('../6-health-media1.csv')
health_media2 <- fread('../6-health-media2.csv')
health_media3 <- fread('../6-health-media3.csv')
health_media4 <- fread('../6-health-media4.csv')
intend0 <- list(health_media1$INTEND.0, health_media2$INTEND.0, health_media3$INTEND.0,
health_media4$INTEND.0)
intend0_nrow <- max(sapply(intend0, length))
intend0 <- sapply(intend0, function(x) c(x, rep(NA, intend0_nrow - length(x))))
intend0 <- as.data.frame(intend0)
colnames(intend0) <- c('health_media1', 'health_media2', 'health_media3', 'health_media4')
View(na.omit(melt(intend0)))
View(na.omit(melt(intend0)))
intend0 <- na.omit(melt(intend0))
View(intend0)
colnames(intend0) <- c('health_media', 'INTEND.0')
View(intend0)
oneway.test(intend0$INTEND.0 ~ intend0$health_media, var.equal = TRUE)
oneway_test <- oneway.test(intend0$INTEND.0 ~ intend0$health_media, var.equal = TRUE)
oneway_test$statistic
oneway_test$parameter
oneway_test$parameter[1]
oneway_test$parameter[2]
cut_off_95 <- qf(p = 0.95, df1 = oneway_test$parameter[1], df2 = oneway_test$parameter[2])
cut_off_95
cut_off_99 <- qf(p = 0.99, df1 = oneway_test$parameter[1], df2 = oneway_test$parameter[2])
cut_off_99
health_media1 <- fread('../6-health-media1.csv')
health_media2 <- fread('../6-health-media2.csv')
health_media3 <- fread('../6-health-media3.csv')
health_media4 <- fread('../6-health-media4.csv')
intend0 <- list(health_media1$INTEND.0, health_media2$INTEND.0, health_media3$INTEND.0,
health_media4$INTEND.0)
intend0_nrow <- max(sapply(intend0, length))
intend0 <- sapply(intend0, function(x) c(x, rep(NA, intend0_nrow - length(x))))
intend0 <- as.data.frame(intend0)
colnames(intend0) <- c('health_media1', 'health_media2', 'health_media3', 'health_media4')
intend0_row_wise <- na.omit(melt(intend0))
colnames(intend0_row_wise) <- c('health_media', 'INTEND.0')
oneway_test <- oneway.test(intend0_row_wise$INTEND.0 ~ intend0_row_wise$health_media,
var.equal = TRUE)
cut_off_95 <- qf(p = 0.95, df1 = oneway_test$parameter[1], df2 = oneway_test$parameter[2])
cut_off_95
cut_off_99 <- qf(p = 0.99, df1 = oneway_test$parameter[1], df2 = oneway_test$parameter[2])
cut_off_99
plot(density(intend0$health_media1))
plot(density(intend0$health_media1), na.rm = TRUE)
plot(density(intend0$health_media1, na.rm = TRUE))
plot(density(intend0$health_media1, na.rm = TRUE), lwd = 2, bty = 'l',
main = 'Distribution of Intention to Share Across All 4 Media')
lines(density(intend0$health_media2, na.rm = TRUE), col = 'blue', lwd = 2)
plot(density(intend0$health_media1, na.rm = TRUE), lwd = 2, bty = 'l', ylim = c(0, 0.3),
main = 'Distribution of Intention to Share Across All 4 Media')
lines(density(intend0$health_media2, na.rm = TRUE), col = 'blue', lwd = 2)
lines(density(intend0$health_media3, na.rm = TRUE), col = 'red', lwd = 2)
lines(density(intend0$health_media4, na.rm = TRUE), col = 'orange', lwd = 2)
legend('topleft', col = c('black', 'blue', 'red', 'orange'), bty = 'n',
legend = c('health_media1', 'health_media2', 'health_media3', 'health_media4'))
plot(density(intend0$health_media1, na.rm = TRUE), lwd = 2, bty = 'l', ylim = c(0, 0.3),
main = 'Distribution of Intention to Share Across All 4 Media')
lines(density(intend0$health_media2, na.rm = TRUE), col = 'blue', lwd = 2)
lines(density(intend0$health_media3, na.rm = TRUE), col = 'red', lwd = 2)
lines(density(intend0$health_media4, na.rm = TRUE), col = 'orange', lwd = 2)
legend('topleft', lwd = c(2, 2, 2, 2), col = c('black', 'blue', 'red', 'orange'),
bty = 'n',
legend = c('health_media1', 'health_media2', 'health_media3', 'health_media4'))
sapply(intend0, var, na.rm = TRUE)
boot_anova <- function(t1, t2, t3, t4, treat_nums) {
size1 <- length(t1)
size2 <- length(t2)
size3 <- length(t3)
size4 <- length(t4)
null_grp1 <- sample(t1 - mean(t1), size1, replace = TRUE)
null_grp2 <- sample(t2 - mean(t2), size2, replace = TRUE)
null_grp3 <- sample(t3 - mean(t3), size3, replace = TRUE)
null_grp4 <- sample(t4 - mean(t4), size4, replace = TRUE)
null_values <- c(null_grp1, null_grp2, null_grp3, null_grp4)
alt_grp1 <- sample(t1, size1, replace = TRUE)
alt_grp2 <- sample(t2, size2, replace = TRUE)
alt_grp3 <- sample(t3, size3, replace = TRUE)
alt_grp4 <- sample(t4, size4, replace = TRUE)
alt_values <- c(alt_grp1, alt_grp2, alt_grp3, alt_grp4)
return(c(oneway.test(null_values ~ treat_nums, var.equal = TRUE)$statistic,
oneway.test(alt_values ~ treat_nums, var.equal = TRUE)$statistic))
}
intend0_1 <- intend0_row_wise$INTEND.0[intend0_row_wise$health_media == 'health_media1']
intend0_2 <- intend0_row_wise$INTEND.0[intend0_row_wise$health_media == 'health_media2']
intend0_3 <- intend0_row_wise$INTEND.0[intend0_row_wise$health_media == 'health_media3']
intend0_4 <- intend0_row_wise$INTEND.0[intend0_row_wise$health_media == 'health_media4']
health_medias <- intend0_row_wise$health_media
set.seed(1)
f_values <- replicate(10000, boot_anova(intend0_1, intend0_2, intend0_3, intend0_4,
health_medias))
f_nulls <- f_values[1, ]
f_alts <- f_values[2, ]
boot_cut_off_95 <- quantile(f_nulls, 0.95)
boot_cut_off_95
boot_cut_off_99 <- quantile(f_nulls, 0.99)
boot_cut_off_99
plot(density(f_nulls), col = 'blue', lwd = 2, main = 'Null and Alt Distributions of F')
plot(density(f_nulls), col = 'blue', lwd = 2, bty = 'l',
main = 'Null and Alt Distributions of F')
lines(density(f_alts), col = 'red', lwd = 2)
plot(density(f_alts), col = 'red', lwd = 2)
plot(density(f_nulls), col = 'blue', lwd = 2, bty = 'l', xlim = c(0, 20),
main = 'Null and Alt Distributions of F')
lines(density(f_alts), col = 'red', lwd = 2)
abline(v = boot_cut_off_95, lty = 2, col = 'blue')
abline(v = boot_cut_off_99, lty = 3, col = 'blue')
abline(v = mean(f_alts), lty = 2, col = 'red')
legend('topright', bty = 'n', lty = c(1, 1, 2, 3, 2),
col = c('blue', 'red', 'blue', 'blue', 'red'),
legend =
c('f_nulls', 'f_alts', 'boot_cut_off_95', 'boot_cut_off_99', 'mean(f_alts)'))
plot(density(f_nulls), col = 'blue', lwd = 2, bty = 'l', xlim = c(0, 20),
main = 'Null and Alt Distributions of F')
lines(density(f_alts), col = 'red', lwd = 2)
abline(v = boot_cut_off_95, lty = 2, col = 'blue')
abline(v = boot_cut_off_99, lty = 3, col = 'blue')
abline(v = mean(f_alts), lty = 2, col = 'red')
legend('topright', bty = 'n', lty = c(1, 1, 2, 3, 2), lwd = c(2, 2, 1, 1, 1),
col = c('blue', 'red', 'blue', 'blue', 'red'),
legend =
c('f_nulls', 'f_alts', 'boot_cut_off_95', 'boot_cut_off_99', 'mean(f_alts)'))
15*7
15+12*6
87 -35
mean(6125, 4765, 5700, 6800, 3630, 5300, 5450)
mean(1, 2, 3, 4)
mean(c(6125, 4765, 5700, 6800, 3630, 5300, 5450))
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date('1969-01-01')
unclass(d2)
install.packages('manipulate')
library(manipulate)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
interactive_regression <- function() {
cat("Click on the plot to create data points; hit [esc] to stop")
plot(NA, xlim=c(-5,50), ylim=c(-5,50))
points = data.frame()
repeat {
click_loc <- locator(1)
if (is.null(click_loc)) break
if(nrow(points) == 0 ) {
points <- data.frame(x=click_loc$x, y=click_loc$y)
} else {
points <- rbind(points, c(click_loc$x, click_loc$y))
}
plot(points, xlim=c(-5,50), ylim=c(-5,50), pch=19, col="gray")
if (nrow(points) < 2) next
model <- lm(points$y ~ points$x)
abline(model, lwd=2, col="cornflowerblue")
text(1, 50, paste(c("Raw intercept: ", round(model$coefficients[1], 2)), collapse=" "))
text(1, 45, paste(c("Raw slope    : ", round(model$coefficients[2], 2)), collapse=" "))
text(1, 40, paste(c("Correlation  : ", round(cor(points$x, points$y), 2)), collapse=" "))
}
return(points)
}
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
interactive_regression()
pts <- interactive_regression()
pts <- interactive_regression()
pts <- interactive_regression()
pts
pts
pts <- interactive_regression()
summary(lm(pts$y ~ pts$x))
cor(pts)
cor(pts$y, pts$x)
summ <- summary(lm(pts$y ~ pts$x))
summ$coefficients
summ$coefficients[1]
summ$coefficients[2]
summ$coefficients[, 2]
summ$coefficients[1, ]
summ$coefficients[, 1]
summ$coefficients[1, 1]
summ$coefficients[2, 1]
summ$coefficients[, 1]
interactive_regression()
pts_std <- scale(pts)
pts_std <- as.data.frame(pts_std)
summary(lm(pts_std$y ~ pts_std$x))
summary(lm(pts$y ~ pts$x))
setwd("F:/IMBA/4th semester/1-business analytics using statistical modeling/business_analytics_using_statistical_modeling")
cars <- read.table("../10-auto-data.txt", header = FALSE, na.strings = "?")[-9]
names(cars) <- c("mpg", "cylinders", "displacement", "horsepower", "weight",
"acceleration", "model_year", "origin")
cars_log <- with(cars, data.frame(log(mpg), log(cylinders), log(displacement),
log(horsepower), log(weight), log(acceleration),
model_year, origin))
regr_mpg <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
model_year + factor(origin), data = cars)
summary(regr_mpg)
regr_mpg_log <- lm(log.mpg. ~ log.cylinders. + log.displacement. + log.horsepower. +
log.weight. + log.acceleration. + model_year + factor(origin),
data = cars_log)
summary(regr_mpg_log)
plot(density(regr_wt$residuals), main = 'Density Plot of Raw Regression Residuals')
regr_wt <- lm(mpg ~ weight, data = cars)
regr_wt_log <- lm(log.mpg. ~ log.weight., data = cars_log)
plot(density(regr_wt$residuals), main = 'Density Plot of Raw Regression Residuals')
lines(density(regr_wt_log$residuals), col = 'blue')
plot(density(regr_wt_log$residuals), main = 'Density Plot of Raw Regression Residuals')
lines(density(regr_wt$residuals), col = 'blue')
plot(density(regr_wt$residuals), ylim = c(0, 3),main = 'Density Plot of Raw Regression Residuals')
lines(density(regr_wt_log$residuals), col = 'blue')
plot(density(regr_wt_log$residuals), type = 'n', main = 'Density Plot of Residuals')
lines(density(regr_wt$residuals))
plot(density(regr_wt$residuals), ylim = c(0, 3), main = 'Density Plot of Residuals')
lines(density(regr_wt_log$residuals), col = 'blue', lwd = 2)
legend('topright',legend = c('Residuals of Raw Regression',
'Residuals of Log-Transformed Regression'),
col = c('black', 'blue'), lwd = c(1, 2))
plot(density(regr_wt$residuals), ylim = c(0, 3), main = 'Density Plot of Residuals')
lines(density(regr_wt_log$residuals), col = 'blue', lwd = 2)
legend('topright',legend = c('Raw Regression', 'Log-Transformed Regression'),
col = c('black', 'blue'), lwd = c(1, 2), bty = 'n')
plot(density(regr_wt$residuals), ylim = c(0, 3), main = 'Density Plot of Residuals')
lines(density(regr_wt_log$residuals), col = 'blue', lwd = 2)
legend('topleft',legend = c('Raw Regression', 'Log-Transformed Regression'),
col = c('black', 'blue'), lwd = c(1, 2), bty = 'n')
par(mfrow = c(1, 2))
plot(cars_log$log.weight., regr_wt$residuals, xlab = 'Weight (log-transformed)',
ylab = 'Residuals',
main = 'Raw Regression Residuals of Log-Transfomed Weight')
abline(h = 0, col = 'blue', lwd = 2)
plot(cars_log$log.weight., regr_wt_log$residuals, xlab = 'Weight (log-transformed)',
ylab = 'Residuals',
main = 'Log-Transformed Regression Residuals of Log-Transfomed Weight')
abline(h = 0, col = 'blue', lwd = 2)
summary(regr_wt_log)$coefficients[2, ]
summary(regr_wt_log)$coefficients
summary(regr_wt_log)$coefficients[-1,]
summary(regr_wt_log)$coefficients
summary(regr_wt_log)
regr_log <- lm(log.mpg. ~ log.cylinders. + log.displacement. + log.horsepower. +
log.weight. + log.acceleration. + model_year + factor(origin),
data = cars_log)
vif_wt_log <- 1 / (1 - summary(regr_log)$r.squared)
vif_wt_log
r2_wt_log <- summary(regr_log)$r.squared
r2_wt_log
vif_wt_log <- 1 / (1 - summary(regr_wt_log)$r.squared)
vif_wt_log
regr_wt_log2 <- lm(log.weight. ~ log.cylinders. + log.displacement. + log.horsepower. +
log.acceleration. + model_year + factor(origin), data = cars_log)
vif_wt_log <- 1 / (1 - summary(regr_wt_log2)$r.squared)
vif_wt_log
vif(regr_mpg_log)
library(car)
vif(regr_mpg_log)
regr_mpg_log2 <- lm(log.mpg. ~ log.cylinders. + log.horsepower. + log.weight. +
log.acceleration. + model_year + factor(origin), data = cars_log)
vif(regr_mpg_log2)
regr_mpg_log3 <- lm(log.mpg. ~ log.cylinders. + log.weight. + log.acceleration. +
model_year + factor(origin), data = cars_log)
vif(regr_mpg_log3)
regr_mpg_log4 <- lm(log.mpg. ~ log.weight. + log.acceleration. + model_year +
factor(origin), data = cars_log)
vif(regr_mpg_log4)
test <- summary(regr_mpg_log4)
test$adj.r.squared
summary(regr_mpg_log)$adj.r.squared
summary(regr_mpg_log4)$adj.r.squared
vif = 5
cor_x1_x2 <- sqrt(1 - (1 / vif))
cor_x1_x2
cor_x1_x2 <- sqrt(1 - (1 / vif))
cor_x1_x2
vif = 10
cor_x1_x2 <- sqrt(1 - (1 / vif))
cor_x1_x2
