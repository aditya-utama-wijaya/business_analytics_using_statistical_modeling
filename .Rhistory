my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c('patient', 'age', 'weight', 'bp'. 'rating', 'test')
cnames <- c('patient', 'age', 'weight', 'bp', 'rating', 'test')
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 | 6 != 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flag$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = 'Speed')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, main = 'My Plot')
plot(cars, main = 'My Plot')
plot(cars)
plot(cars, sub = 'My Plot Subtitle')
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
pnorm(-3.7)
pnorm(-3.7) * 2500000
pnorm(-3.7) * 2,500,000
pnorm(-3.7) * 2.500.000
pnorm(-3.7) * 2500000
library(data.table)
tires <- fread('../tires.csv')
sample_mean <- mean(tires)
sample_mean <- mean(tires$lifetime_km)
sample_mean <- mean(tires$lifetime_km)
sd(tires$lifetime_km)
standard_error <- sd(tires$lifetime_km) / sqrt(length(tires$lifetime_km))
standard_error
CI_95 <- c(sample_mean + c(-1.96, 1.96) * standard_error)
CI_95
range(tires$lifetime_km)
hist(tires$lifetime_km, breaks = 'fd')
bookings <- fread('../3-first_bookings_datetime_sample.txt')
datetime <- strptime(bookings$datetime, '%m/%d/%Y %H:%M')
hours <- datetime$hour
mins <- datetime$min
minday <- hours * 60 + mins
plot(density(minday), col = 'blue', lwd = 2,
main = 'Minute (of the day) of first ever booking')
quantile(sample_mean, probs = c(0.025, 0.975))
CI_95 <- c(sample_mean + c(-2.58, 2.58) * standard_error)
CI_95
View(tires)
tires <- fread('../4-tires.csv')
sample_mean <- mean(tires$lifetime_km)
sample_mean
standard_error <- sd(tires$lifetime_km) / sqrt(length(tires$lifetime_km))
standard_error
CI_95 <- c(sample_mean + c(-1.96, 1.96) * standard_error)
CI_95
sd(tires$lifetime_km)
sd(tires$lifetime_km) / sqrt(360)
sample_mean + 1.96 * 790.3876
hyp_mean <- 90000
t <- (sample_mean - hyp_mean) / standard_error
t
sample_mean <- 85945.29
standard_deviation <- 14996.55
sample_size <- 360
standard_error <- standard_deviation / sqrt(sample_size)
standard_error
CI_95 <- c(sample_mean + c(-1.96, 1.96) * standard_error)
CI_95
num_bootstraps <- 2000
sample_statistic <- function(stat_function, sample0) {
resample <- sample(sample0, length(sample0), replace = TRUE)
return(stat_function(resample))
}
sample_means <- replicate(num_bootstraps, sample_statistic(mean, tires$lifetime_km))
plot(density(sample_means))
mean(sample_means)
quantile(sample_means, probs = c(0.025, 0.975))
sample_mean - hyp_mean
hyp_mean
sample_mean
compute_sample_mean <- function(sample0){
resample <- sample(sample0, length(sample0), replace = TRUE)
return(mean(resample))
}
sample_means <- replicate(num_bootstraps, compute_sample_mean(tires$lifetime_km))
mean(sample_means)
quantile(sample_means, probs = c(0.025, 0.975))
boot_mean_diffs <- function(sample0, mean_hyp) {
resample <- sample(sample0, length(sample0), replace = TRUE)
return(mean(resample) - mean_hyp)
}
mean_diffs <- replicate(num_bootstraps, boot_mean_diffs(tires$lifetime_km, hyp_mean))
mean(mean_diffs)
quantile(mean_diffs, probs = c(0.025, 0.975))
boot_t_stat <- function(sample0, mean_hyp) {
resample <- sample(sample0, length(sample0), replace = TRUE)
resample_se <- sd(resample) / sqrt(length(resample))
return((mean(resample) - mean_hyp) / resample_se)
}
t_boots <- replicate(num_bootstraps, boot_t_stat(tires$lifetime_km, hyp_mean))
mean(t_boots)
quantile(t_boots, probs = c(0.025, 0.975))
sample_means_ci_95 <- quantile(sample_means, probs = c(0.025, 0.975))
sample_means_ci_95
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_boots_ci_95 <- quantile(t_boots, probs = c(0.025, 0.975))
t_boots_ci_95
plot(density(sample_means))
plot(density(sample_means), col = 'blue', lwd = 2, main = 'Bootstrapped Sample Means')
abline(v = sample_means_ci_95, lty = 2)
plot(density(sample_means), col = 'blue', lwd = 2, main = 'Bootstrapped Sample Means')
abline(v = sample_means_ci_95, lty = 2)
plot(density(sample_means), col = 'blue', lwd = 2, main = 'Bootstrapped Sample Means')
lines(abline(v = sample_means_ci_95, lty = 2))
plot(density(sample_means), col = 'blue', lwd = 2, main = 'Bootstrapped Sample Means')
abline(v = sample_means_ci_95, lty = 2)
plot(density(mean_diffs), col = 'blue', lwd = 2, main = 'Bootstrapped Mean Differences')
plot(density(mean_diffs), col = 'blue', lwd = 2, main = 'Bootstrapped Mean Differences')
min(t_boots)
min(mean_diffs)
plot(density(mean_diffs), col = 'blue', lwd = 2, xlim = c(-6500, 0),
main = 'Bootstrapped Mean Differences')
plot(density(mean_diffs), col = 'blue', lwd = 2, xlim = c(-7000, 0),
main = 'Bootstrapped Mean Differences')
plot(density(t_boots), col = 'blue', lwd = 2, xlim = c(-10, 0),
main = 'Bootstrapped t-statistics')
abline(v = t_boots_ci_95, lty = 2)
sample_mean <- 85945.29
standard_deviation <- 14996.55
sample_size <- 360
standard_error <- standard_deviation / sqrt(sample_size)
standard_error
CI_95 <- c(sample_mean + c(-1.96, 1.96) * standard_error)
hyp_mean <- 90000
t <- (sample_mean - hyp_mean) / standard_error
t
library(data.table)
page_loads <- fread('../5-page_loads.csv')
View(page_loads)
boxplot(page_loads$Alentus, horizontal = TRUE)
alentus_box <- boxplot(page_loads$Alentus, horizontal = TRUE)
alentus_box$out
alentus_omit_outliers <- alentus[!(page_loads$Alentus %in% alentus_box$out)]
alentus_omit_outliers <- page_loads$Alentus[!(page_loads$Alentus %in% alentus_box$out)]
boxplot(alentus_omit_outliers, horizontal = TRUE)$out
boxplot(alentus_omit_outliers, horizontal = TRUE)
t.test(alentus_omit_outliers, page_loads$HostMonster, var.equal = FALSE)
t_test <- t.test(alentus_omit_outliers, page_loads$HostMonster, var.equal = FALSE)
t_test$statistic
t_test$conf.int
t_test$conf.int[1, 2]
t_test$conf.int[1]
t_test$conf.int[c(1, 2)]
t_test$conf.int[, 1]
t_test$conf.int[[1]]
t_test$conf.int[2]
t_test$conf.int[3]
t_test$conf.int[1][1]
t_test
t_test$conf.int
t_test$conf.int[, 'conf.level']
t_test$conf.int(), 'conf.level')
t_test$conf.int(, 'conf.level')
t_test$p.value
t_test$statistic
t_value <- t_test$statistic
t_value
p_value <- t_test$p.value
p_value
p
bootstrap_null_alt <- function(sample0, hyp_mean) {
resample <- sample(sample0, length(sample0), replace = TRUE)
resample_se <- sd(resample) / sqrt(length(resample))
t_stat_alt <- (mean(resample) - hyp_mean) / resample_se
t_stat_null <- (mean(resample) - mean(sample0)) / resample_se
return(c(t_stat_alt, t_stat_null))
}
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- (mean(resample0) - mean(resample1)) / resample0_se
t_stat_null <- (mean(resample0) - mean(sample0)) / resample0_se
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt, t_stat_null, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
page_loads$HostMonster))
hostmonster <- page_loads$HostMonster
hostmonster <- na.omit(page_loads$HostMonster)
page_loads <- fread('../5-page_loads.csv')
alentus_box <- boxplot(page_loads$Alentus, horizontal = TRUE)
alentus_omit_outliers <- page_loads$Alentus[!(page_loads$Alentus %in% alentus_box$out)]
hostmonster <- page_loads$HostMonster
hostmonster <- as.numeric(na.omit(page_loads$HostMonster))
t_test <- t.test(alentus_omit_outliers, hostmonster, var.equal = FALSE)
t_test
t_test$conf.int[c(1, 2)]
t_value <- t_test$statistic
t_value
p_value <- t_test$p.value
p_value
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- (mean(resample0) - mean(resample1)) / resample0_se
t_stat_null <- (mean(resample0) - mean(sample0)) / resample0_se
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt, t_stat_null, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
head(boot_t_stats)
mean_diffs <- boot_t_stats[3, ]
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_alt <- boot_t_stats[1, ]
plot(density(t_alt), lwd = 2, col = 'blue',
main = 'Alternative and Null Distributions of t')
t_null <- boot_t_stats[2, ]
plot(density(t_null))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
legend(-7, 0.5, c('t_alt', 't_null'), lwd = c(2, 1), lty = c(1, 2),
col = c('blue', 'black'))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
legend(-6, 0.5, c('t_alt', 't_null'), lwd = c(2, 1), lty = c(1, 2), bty = 'n',
col = c('blue', 'black'))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
legend(-6, 0.4, c('t_alt', 't_null'), lwd = c(2, 1), lty = c(1, 2), bty = 'n',
col = c('blue', 'black'))
t_alt_ci_95 <- quantile(t_alt, probs = c(0.025, 0.975))
abline(v = t_alt_ci_95, lty = 3)
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
abline(v = t_alt_ci_95, lty = 3)
legend(-6, 0.4, c('t_alt', 't_null', 't_alt_ci_95'), lwd = c(2, 1, 1), lty = c(1, 2, 3),
bty = 'n', col = c('blue', 'black', 'black'))
t_alt_ci_95
quantile(t_null, probs = c(0.025, 0.975))
mean(t_alt)
median(alentus_omit_outliers) < median(hostmonster)
boot_median_diffs <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
median_diff <- abs(median(resample0) - median(resample1))
median_null_diff <- abs(median(resample0) - median(sample0))
return(c(median_diff, median_null_diff))
}
median_diffs <- replicate(10000, boot_median_diffs(alentus_omit_outliers, hostmonster))
median_diff <- median_diffs[1, ]
mean(median_diff)
boot_median_diffs <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
median_diff <- median(resample0) - median(resample1)
median_null_diff <- median(resample0) - median(sample0)
return(c(median_diff, median_null_diff))
}
median_diffs <- replicate(10000, boot_median_diffs(alentus_omit_outliers, hostmonster))
median_diff <- median_diffs[1, ]
mean(median_diff)
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- t.test(resample0, resample1, var.equal = FALSE)
t_stat_null <- t.test(resample0, sample0, var.equal = FALSE)
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt$statistc, t_stat_null$statistic, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
mean_diffs <- boot_t_stats[3, ]
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- t.test(resample0, resample1, var.equal = FALSE)
t_stat_null <- t.test(resample0, sample0, var.equal = FALSE)
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt$statistic, t_stat_null$statistic, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
mean_diffs <- boot_t_stats[3, ]
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_alt <- boot_t_stats[1, ]
t_null <- boot_t_stats[2, ]
t_alt_ci_95 <- quantile(t_alt, probs = c(0.025, 0.975))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
setwd("F:/IMBA/4th semester/1-business analytics using statistical modeling/business_analytics_using_statistical_modeling")
library(data.table)
page_loads <- fread('../5-page_loads.csv')
alentus_box <- boxplot(page_loads$Alentus, horizontal = TRUE)
alentus_box$out
alentus_omit_outliers <- page_loads$Alentus[!(page_loads$Alentus %in% alentus_box$out)]
hostmonster <- as.numeric(na.omit(page_loads$HostMonster))
t_test <- t.test(alentus_omit_outliers, hostmonster, var.equal = FALSE)
t_test
t_test$conf.int[c(1, 2)]
t_value <- t_test$statistic
t_value
p_value <- t_test$p.value
p_value
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- t.test(resample0, resample1, var.equal = FALSE)
t_stat_null <- t.test(resample0, sample0, var.equal = FALSE)
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt$statistic, t_stat_null$statistic, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
mean_diffs <- boot_t_stats[3, ]
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_alt <- boot_t_stats[1, ]
t_null <- boot_t_stats[2, ]
t_alt_ci_95 <- quantile(t_alt, probs = c(0.025, 0.975))
plot(density(t_alt), xlim = c(-6, 6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
plot(density(t_null))
plot(density(t_alt), xlim = c(-6, 6), ylim = c(0, 0.6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
abline(v = t_alt_ci_95, lty = 3)
legend(-6, 0.4, c('t_alt', 't_null', 't_alt_ci_95'), lwd = c(2, 1, 1), lty = c(1, 2, 3),
bty = 'n', col = c('blue', 'black', 'black'))
plot(density(t_alt), xlim = c(-6, 6), ylim = c(0, 0.6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
abline(v = t_alt_ci_95, lty = 3)
legend(-6, 0.6, c('t_alt', 't_null', 't_alt_ci_95'), lwd = c(2, 1, 1), lty = c(1, 2, 3),
bty = 'n', col = c('blue', 'black', 'black'))
median(alentus_omit_outliers) < median(hostmonster)
boot_median_diffs <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
median_diff <- median(resample0) - median(resample1)
median_null_diff <- median(resample0) - median(sample0)
return(c(median_diff, median_null_diff))
}
median_diffs <- replicate(10000, boot_median_diffs(alentus_omit_outliers, hostmonster))
median_diff <- median_diffs[1, ]
mean(median_diff)
median_diff_ci_95 <- quantile(median_diff, probs = c(0, 0.95))
median_diff_ci_95
bootstrap_null_alt <- function(sample0, sample1) {
resample0 <- sample(sample0, length(sample0), replace = TRUE)
resample1 <- sample(sample1, length(sample1), replace = TRUE)
resample0_se <- sd(resample0) / sqrt(length(resample0))
t_stat_alt <- t.test(resample0, resample1, var.equal = FALSE)$statistic
t_stat_null <- t.test(resample0, sample0, var.equal = FALSE)$statistic
mean_diffs <- abs(mean(resample0) - mean(resample1))
return(c(t_stat_alt, t_stat_null, mean_diffs))
}
boot_t_stats <- replicate(10000, bootstrap_null_alt(alentus_omit_outliers,
hostmonster))
mean_diffs <- boot_t_stats[3, ]
mean_diffs_ci_95 <- quantile(mean_diffs, probs = c(0.025, 0.975))
mean_diffs_ci_95
t_alt <- boot_t_stats[1, ]
t_null <- boot_t_stats[2, ]
t_alt_ci_95 <- quantile(t_alt, probs = c(0.025, 0.975))
plot(density(t_alt), xlim = c(-6, 6), ylim = c(0, 0.6), lwd = 2, col = 'blue', bty = 'l',
main = 'Alternative and Null Distributions of t')
lines(density(t_null), lty = 2)
abline(v = t_alt_ci_95, lty = 3)
legend('topleft', legend = c('t_alt', 't_null', 't_alt_ci_95'), lwd = c(2, 1, 1),
lty = c(1, 2, 3), bty = 'n', col = c('blue', 'black', 'black'))
median_diff_ci_95 <- quantile(median_diff, probs = c(0, 0.95))
median_diff_ci_95
median_null_diff <- median_diffs[2, ]
plot(density(median_diff))
plot(density(median_null_diff))
plot(density(median_diff), xlim = c(-1, 1.5), ylim = c(0, 4), lwd = 2, col = 'blue',
bty = 'l', main = 'Distributions of Median Differences')
lines(density(median_null_diff), lwd = 2, col = 'red')
plot(density(median_diff), xlim = c(-1, 1.5), ylim = c(0, 4), lwd = 2, col = 'blue',
bty = 'l', main = 'Distributions of Median Differences')
lines(density(median_null_diff), lwd = 2, col = 'red')
median_diff_ci_95
median_diff_ci_95[2]
median_diff_ci_95[, 2]
median_diff_ci_95[2, ]
abline(v = median_diff_ci_95[2], lty = 2)
legend('topright', legend = c('median_diff', 'median_null_diff', '5% rejection bound'),
lwd = c(2, 2, 1), lty = c(1, 1, 2), col = c('blue', 'red', 'black'), bty = 'n')
median_diff_ci_95 <- quantile(median_diff, probs = c(0.95))
median_diff_ci_95
survey <- fread('../5-Data_0630.txt')
View(survey)
iphone <- survey[survey$`[current_phone]` == 1, ]$`[Brand_Identification.1]`
samsung <- survey[survey$`[current_phone]` == 2, ]$`[Brand_Identification.1]`
View(survey)
which(max(var(iphone), var(samsung)))
?which
max(var(iphone), var(samsung))
which(max(var(iphone), var(samsung)))
var(iphone)
sort(var(iphone), var(samsung))
sort(c(var(iphone), var(samsung)))
sort(c(var(iphone), var(samsung)), decreasing = TRUE)
sort(c(var(iphone), var(samsung)), decreasing = TRUE)[1]
names(sort(c(var(iphone), var(samsung)), decreasing = TRUE))
names(max(var(iphone), var(samsung)))
which.max(var(iphone), var(samsung))
which.max(c(var(iphone), var(samsung)))
which.min(c(var(iphone), var(samsung)))
c(var(iphone), var(samsung))[1]
which.max(c(var(iphone), var(samsung)))
f_stat <- var(iphone) / var(samsung)
f_stat
cut_off <- qf(p = 0.95, df1 = length(iphone) - 1, df2 = length(samsung) - 1)
cut_off
f_value <- var(iphone) / var(samsung)
f_value
var_brands_test <- function(larger_var_sample, smaller_var_sample) {
resample_larger_var <- sample(larger_var_sample, length(larger_var_sample),
replace = TRUE)
resample_smaller_var <- sample(smaller_var_sample, length(smaller_var_sample),
replace = TRUE)
f_alt <- var(resample_larger_var) / var(resample_smaller_var)
f_null <- var(resample_larger_var) / var(larger_var_sample)
return(c(f_alt, f_null))
}
f_stats <- replicate(10000, var_brands_test(iphone, samsung))
f_alts <- f_stats[1, ]
f_nulls <- f_stats[2, ]
boot_cut_off <- quantile(f_nulls, probs = 0.95)
boot_cut_off
median(f_alts)
plot(density(f_nulls))
plot(density(f_alts))
plot(density(f_alts), xlim = c(0.4, 2.5), ylim = c(0, 3.5), lwd = 2, col = 'blue',
bty = 'l', main = 'Null and Alt Distributions of F')
lines(density(f_nulls), lwd = 2, col = 'red', lty = 3)
abline(v = boot_cut_off, lty = 3, col = 'red')
abline(v = median(f_alts), lty = 3, col = 'blue')
legend('topright', legend = c('f_alts', 'f_nulls', 'median(f_alts)', 'cut_off'),
lty = c(1, 1, 3, 3), lwd = c(2, 2, 1, 1), bty = 'n',
col = c('blue', 'red', 'blue', 'red'))
