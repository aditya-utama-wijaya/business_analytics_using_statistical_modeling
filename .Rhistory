lines(precision1_df$n_recommendations, precision1_df$precision_cor, col = 'blue', lwd = 2)
legend(topleft, bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue'),
text.col = c('black', 'red', 'blue'))
legend('topleft', bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue'),
text.col = c('black', 'red', 'blue'))
grid()
plot(precision1_df$n_recommendations, precision1_df$precision_adj_cos, ylim = c(0, 0.02),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Precision Comparison',
ylab = 'Precision', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
axis(1, at = seq(3, 9, 3), labels = c(3, 6, 9))
lines(precision1_df$n_recommendations, precision1_df$precision_cos, col = 'red', lwd = 2)
lines(precision1_df$n_recommendations, precision1_df$precision_cor, col = 'blue', lwd = 2)
legend('topleft', bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue'),
text.col = c('black', 'red', 'blue'))
grid()
recall1_df <- cbind.data.frame(n_recommendations, recall_cor, recall_cos, recall_adj_cos)
plot(recall1_df$n_recommendations, recall1_df$recall_adj_cos, ylim = c(0, 0.03),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Recall Comparison',
ylab = 'Recall', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
plot(recall1_df$n_recommendations, recall1_df$recall_adj_cos, ylim = c(0, 1),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Recall Comparison',
ylab = 'Recall', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
plot(recall1_df$n_recommendations, recall1_df$recall_adj_cos, ylim = c(0, 0.2),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Recall Comparison',
ylab = 'Recall', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
plot(recall1_df$n_recommendations, recall1_df$recall_adj_cos, ylim = c(0, 0.15),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Recall Comparison',
ylab = 'Recall', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
axis(1, at = seq(3, 9, 3), labels = c(3, 6, 9))
lines(recall1_df$n_recommendations, recall1_df$precision_cos, col = 'red', lwd = 2)
lines(recall1_df$n_recommendations, recall1_df$recall_cos, col = 'red', lwd = 2)
lines(recall1_df$n_recommendations, recall1_df$recall_cor, col = 'blue', lwd = 2)
legend('topleft', bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue'),
text.col = c('black', 'red', 'blue'))
grid()
plot(recall1_df$n_recommendations, recall1_df$recall_adj_cos, ylim = c(0, 0.1),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Recall Comparison',
ylab = 'Recall', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
axis(1, at = seq(3, 9, 3), labels = c(3, 6, 9))
lines(recall1_df$n_recommendations, recall1_df$recall_cos, col = 'red', lwd = 2)
lines(recall1_df$n_recommendations, recall1_df$recall_cor, col = 'blue', lwd = 2)
legend('topleft', bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue'),
text.col = c('black', 'red', 'blue'))
grid()
models_to_evaluate <- list(
IBCF_cos = list(name = 'IBCF', param = list(method = 'cosine', normalize = 'Z-score',
k = 15)),
IBCF_adj_cos = list(name = 'IBCF', param = list(method = 'cosine', normalize = 'center',
k = 15)),
IBCF_cor = list(name = 'IBCF', param = list(method = 'pearson', k = 15)),
Random = list(name = 'RANDOM', param = NULL)
)
set.seed(0)
list_results <- evaluate(x = eval_sets, method = models_to_evaluate,
n = n_recommendations)
avg_matrices <- lapply(list_results, avg)
precision_cor <- avg_matrices$IBCF_cor[, 'precision']
recall_cor <- avg_matrices$IBCF_cor[, 'recall']
precision_cos <- avg_matrices$IBCF_cos[, 'precision']
recall_cos <- avg_matrices$IBCF_cos[, 'recall']
precision_adj_cos <- avg_matrices$IBCF_adj_cos[, 'precision']
recall_adj_cos <- avg_matrices$IBCF_adj_cos[, 'recall']
precision_ran <- avg_matrices$Random[, 'precision']
recall_ran <- avg_matrices$Random[, 'recall']
precision1_df <- cbind.data.frame(n_recommendations, precision_cor, precision_cos,
precision_adj_cos, precision_ran)
plot(precision1_df$n_recommendations, precision1_df$precision_adj_cos, ylim = c(0, 0.02),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Precision Comparison',
ylab = 'Precision', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
axis(1, at = seq(3, 9, 3), labels = c(3, 6, 9))
lines(precision1_df$n_recommendations, precision1_df$precision_cos, col = 'red', lwd = 2)
lines(precision1_df$n_recommendations, precision1_df$precision_cor, col = 'blue', lwd = 2)
lines(precision1_df$n_recommendations, precision1_df$precision_ran, col = 'orange',
lwd = 2)
legend('topleft', bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation', 'Random'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue', 'orange'),
text.col = c('black', 'red', 'blue', 'orange'))
grid()
recall1_df <- cbind.data.frame(n_recommendations, recall_cor, recall_cos, recall_adj_cos,
recall_ran)
plot(recall1_df$n_recommendations, recall1_df$recall_adj_cos, ylim = c(0, 0.1),
xlim = c(0, 9), type = 'l', bty = 'l', main = 'Recall Comparison',
ylab = 'Recall', xlab = 'Number of Recommendations', xaxt = 'n', lwd = 2)
axis(1, at = seq(3, 9, 3), labels = c(3, 6, 9))
lines(recall1_df$n_recommendations, recall1_df$recall_cos, col = 'red', lwd = 2)
lines(recall1_df$n_recommendations, recall1_df$recall_cor, col = 'blue', lwd = 2)
lines(recall1_df$n_recommendations, recall1_df$recall_ran, col = 'orange', lwd = 2)
legend('topleft', bty = 'n',
legend = c('Adjusted Cosine Similarity', 'Cosine Similarity',
'Peason Correlation', 'Random'),
lty = 1, lwd = 2,
col = c('black', 'red', 'blue', 'orange'),
text.col = c('black', 'red', 'blue', 'orange'))
grid()
setwd("F:/IMBA/4th semester/1-business analytics using statistical modeling/business_analytics_using_statistical_modeling")
ac_bundles_dt <- fread("../9-piccollage_accounts_bundles.csv")
View(ac_bundles_dt)
ac_bundles_matrix <- as.matrix(ac_bundles_dt[, -1, with=FALSE])
View(ac_bundles_matrix)
rm(ac_bundles_dt)
bundles_cos <- cosine(ac_bundles_matrix)
bundles_neighbors <- t(apply(bundles_cos, 1, function(x) names(sort(x,
decreasing = TRUE))))
View(bundles_neighbors)
bundles_cos_neighbors <- t(apply(bundles_cos, 1, function(x) names(sort(x,
decreasing = TRUE))))
rm(bundles_neighbors)
bundle_cos_neighbours <- bundle_cos_neighbours[order(bundle_cos_neighbours[, 1]), ]
bundles_cos_neighbours <- bundles_cos_neighbours[order(bundles_cos_neighbours[, 1]), ]
bundles_cos_neighbors <- bundles_cos_neighbors[order(bundles_cos_neighbors[, 1]), ]
View(bundles_cos_neighbors)
View(bundles_cos_neighbors)
bundles_cos_top5 <- bundles_cos_neighbors[, 2:6]
View(bundles_cos_top5)
top5 <- function(accounts_bundles_matrix) {
bundles_sim <- cosine(accounts_bundles_matrix)
bundles_neighbors <- t(apply(bundles_sim, 1, function(x) names(sort(
x, decreasing = TRUE))))
bundles_neighbors <- bundles_neighbors[order(bundles_neighbors[, 1]), ]
bundles_top5 <- bundles_neighbors[, 2:6]
return(bundles_top5)
}
Sorted_Names_Matrix <- function(matrix, column){
cosX <- head(matrix[order(matrix[,column], decreasing=TRUE),], n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(ac_bundles_matrix, 1)
Sorted_Names_Matrix(bundles_cos, 1)
View(bundles_cos_neighbors)
ac_bundles_dt <- fread("../9-piccollage_accounts_bundles.csv")
ac_bundles_matrix <- as.matrix(ac_bundles_dt[, -1, with=FALSE])
rm(ac_bundles_dt)
View(ac_bundles_matrix)
bundles_cos <- cosine(ac_bundles_matrix)
bundles_cos_neighbors <- t(apply(bundles_cos, 1, function(x) names(sort(x,
decreasing = TRUE))))
View(bundles_cos_neighbors)
Sorted_Names_Matrix(bundles_cos, 1:6)
Sorted_Names_Matrix <- function(matrix, column){
cosX <- head(matrix[order(matrix[,column], decreasing=TRUE),], n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(bundles_cos, 1:6)
Sorted_Names_Matrix <- function(matrix, column){
cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix <- function(matrix, column){
for(i in 1:ncol(matrix)) {
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
cosX[i,] <- head(n = 11, rownames(matrix[order(matrix[, i], decreasing = TRUE), ][i]))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix <- function(matrix, column){
for(i in 1:ncol(matrix)) {
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
cosX[i,] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ][i]))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix <- function(matrix, column){
for(i in 1:ncol(matrix)) {
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
cosX[, i] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ][i]))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix <- function(matrix, column){
for(i in 1:ncol(matrix)) {
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE),
][i])))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
colX <- as.data.frame(row.names(cosX)[1:6])
return(colX)
}
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix(as.matrix(bundles_cos), 1)
bundles_cos <- as.matrix(bundles_cos)
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix <- function(matrix, column){
for(i in 1:ncol(matrix)) {
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE),
][i])))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
# colX <- as.data.frame(row.names(cosX)[1:6])
return(cosX)
}
Sorted_Names_Matrix(bundles_cos, 1)
Sorted_Names_Matrix <- function(matrix, column){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE),
][i])))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
# colX <- as.data.frame(row.names(cosX)[1:6])
return(cosX)
}
Sorted_Names_Matrix(bundles_cos, 1)
class(bundles_cos)
Sorted_Names_Matrix <- function(matrix){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE),
][i])))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
# colX <- as.data.frame(row.names(cosX)[1:6])
return(cosX)
}
Sorted_Names_Matrix(bundles_cos)
Sorted_Names_Matrix <- function(matrix){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- t(head(n = 6, rownames(matrix[, order(matrix[i, ], decreasing = TRUE),
])))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
# colX <- as.data.frame(row.names(cosX)[1:6])
return(cosX)
}
Sorted_Names_Matrix(bundles_cos)
Sorted_Names_Matrix <- function(matrix){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE),
])))
}
# cosX <- head(rownames(matrix[order(matrix[,column], decreasing=TRUE),]), n=6)
# colX <- as.data.frame(row.names(cosX)[1:6])
return(cosX)
}
Sorted_Names_Matrix(bundles_cos)
test <- Sorted_Names_Matrix(bundles_cos)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(cosX[column])
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
test
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(cosX[, column])
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ])))
}
return(cosX[, column])
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(t(cosX[, column]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(cosX[column, ])
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- t(head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ])))
}
return(cosX[column, ])
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(t(cosX[column, ]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1:6)
View(test)
Sorted_Names_Matrix(bundles_cos, 1)
test <- Sorted_Names_Matrix(bundles_cos, 1)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(t(cosX[column, ]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1)
View(test)
Sorted_Names_Matrix <- function(matrix, column = 1:165){
cosX <- matrix(NA, nrow = ncol(matrix), ncol = 6, dimnames = list(colnames(matrix)))
for(i in 1:ncol(matrix)) {
cosX[i, ] <- head(n = 6, rownames(matrix[order(matrix[, i], decreasing = TRUE), ]))
}
return(t(cosX[column, ]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1:2)
View(test)
Sorted_Names_Matrix(bundles_cos, 1:2)
ac_bundles_dt <- fread("../9-piccollage_accounts_bundles.csv")
ac_bundles_matrix <- as.matrix(ac_bundles_dt[, -1, with=FALSE])
bundles_cos <- cosine(ac_bundles_matrix)
bundles_cos_neighbors <- t(apply(bundles_cos, 1, function(x) names(sort(x,
decreasing = TRUE))))
bundles_cos_neighbors <- bundles_cos_neighbors[order(bundles_cos_neighbors[, 1]), ]
bundles_cos_top5 <- bundles_cos_neighbors[, 2:6]
top5 <- function(accounts_bundles_matrix) {
bundles_sim <- cosine(accounts_bundles_matrix)
bundles_neighbors <- t(apply(bundles_sim, 1, function(x) names(sort(
x, decreasing = TRUE))))
bundles_neighbors <- bundles_neighbors[order(bundles_neighbors[, 1]), ]
bundles_top5 <- bundles_neighbors[, 2:6]
return(bundles_top5)
}
test <- top5(ac_bundles_matrix)
identical(bundles_cos_top5, test)
col_mean <- sapply(ac_bundles_matrix, mean)
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- sapply(matrix, function(x) head(n = 6, rownames(matrix[order(
x, decreasing = TRUE), ])))
return(t(cosX[column, ]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1:2)
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- sapply(matrix, function(x) {
head(n = 6, rownames(x[order(x, decreasing = TRUE), ]))))
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- sapply(matrix, function(x) {
head(n = 6, rownames(x[order(x, decreasing = TRUE), ])))
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- sapply(matrix, function(x) {
head(n = 6, rownames(x[order(x, decreasing = TRUE), ]))
)}
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- sapply(matrix, function(x) {head(n = 6, rownames(x[order(
x, decreasing = TRUE), ])))}
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- sapply(matrix, function(x) {
head(n = 6, rownames(x[order(x, decreasing = TRUE), ]))
})
return(t(cosX[column, ]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1:2)
Sorted_Names_Matrix <- function(matrix, column = 1:165) {
cosX <- apply(matrix, 1, function(x) {
head(n = 6, rownames(x[order(x, decreasing = TRUE), ]))
})
return(t(cosX[column, ]))
}
test <- Sorted_Names_Matrix(bundles_cos, 1:2)
bundles_cor_top5 <- top5(bundles_col_mc)
col_mean_matrix <- t(replicate(nrow(ac_bundles_matrix), col_mean))
rm(ac_bundles_dt)
col_mean <- sapply(ac_bundles_matrix, mean)
rm(col_mean)
col_mean <- sapply(as.data.frame(ac_bundles_matrix), mean)
col_mean_matrix <- t(replicate(nrow(ac_bundles_matrix), col_mean))
View(col_mean_matrix)
bundles_col_mc <- as.matrix(ac_bundles_matrix - col_mean_matrix)
bundles_cor_top5 <- top5(bundles_col_mc)
View(bundles_cor_top5)
View(bundles_cos_top5)
row_mean <- apply(as.data.frame(ac_bundles_matrix), 1, mean)
row_mean_matrix <- replicate(ncol(ac_bundles_matrix), row_mean)
dim(row_mean_matrix)
bundles_ad_cos_top5 <- top5(bundles_row_mc)
bundles_row_mc <- as.matrix(ac_bundles_matrix - row_mean_matrix)
bundles_adj_cos_top5 <- top5(bundles_row_mc)
View(bundles_adj_cos_top5)
View(bundles_cor_top5)
View(bundles_cos_top5)
ac_bundles_dt <- fread("../9-piccollage_accounts_bundles.csv")
ac_bundles <- fread("../9-piccollage_accounts_bundles.csv")
ac_bundles <- as.matrix(ac_bundles_dt[, -1, with=FALSE])
ac_bundles <- as.matrix(ac_bundles[, -1, with=FALSE])
cos_sim_matrix <- cosine(ac_bundles)
bundle_reco <- function(bundle_cos) names(sort(bundle_cos, decreasing = TRUE))
cos_all_recos <- t(apply(cos_sim_matrix, 1, bundle_reco))
cos_all_recos <- cos_all_recos[order(cos_all_recos[, 1]), ]
cos_top5_recos <- cos_all_recos[, 2:6]
head(cos_top5_recos)
top5_recos <- function(ac_bundles_matrix) {
sim_matrix <- cosine(ac_bundles_matrix)
bundle_reco <- function(bundle_cos) names(sort(bundle_cos, decreasing = TRUE))
all_recos <- t(apply(sim_matrix, 1, bundle_reco))
all_recos <- all_recos[order(all_recos[, 1]), ]
top5_recos <- all_recos[, 2:6]
return(top5_recos)
}
test_function <- top5_recos(ac_bundles)
identical(cos_top5_recos, test_function)
col_mean <- sapply(as.data.frame(ac_bundles), mean)
col_mean_matrix <- t(replicate(nrow(ac_bundles), col_mean))
bundles_col_mc <- as.matrix(ac_bundles - col_mean_matrix)
cor_top5_recos <- top5_recos(bundles_col_mc)
View(cor_top5_recos)
View(cos_top5_recos)
row_mean <- apply(as.data.frame(ac_bundles), 1, mean)
row_mean_matrix <- replicate(ncol(ac_bundles), row_mean)
bundles_row_mc <- as.matrix(ac_bundles - row_mean_matrix)
adj_cos_top5_recos <- top5_recos(bundles_row_mc)
View(adj_cos_top5_recos)
View(cor_top5_recos)
View(cos_top5_recos)
diag(cos_sim_matrix) <- NA
View(cos_sim_matrix)
ac_bundles <- fread("../9-piccollage_accounts_bundles.csv")
ac_bundles <- as.matrix(ac_bundles[, -1, with=FALSE])
cos_sim_matrix <- cosine(ac_bundles)
diag(cos_sim_matrix) <- NA
bundle_reco <- function(bundle_cos) names(sort(bundle_cos, decreasing = TRUE))
cos_all_recos <- t(apply(cos_sim_matrix, 1, bundle_reco))
cos_all_recos <- cos_all_recos[order(cos_all_recos[, 1]), ]
View(cos_all_recos)
ac_bundles <- fread("../9-piccollage_accounts_bundles.csv")
ac_bundles <- as.matrix(ac_bundles[, -1, with=FALSE])
cos_sim_matrix <- cosine(ac_bundles)
diag(cos_sim_matrix) <- NA
bundle_reco <- function(bundle_cos) names(sort(bundle_cos, decreasing = TRUE))
cos_all_recos <- t(apply(cos_sim_matrix, 1, bundle_reco))
View(cos_all_recos)
cos_top5_recos <- cos_all_recos[, 1:5]
View(cos_top5_recos)
top5_recos <- function(ac_bundles_matrix) {
sim_matrix <- cosine(ac_bundles_matrix)
diag(sim_matrix) <- NA
bundle_reco <- function(bundle_cos) names(sort(bundle_cos, decreasing = TRUE))
all_recos <- t(apply(sim_matrix, 1, bundle_reco))
top5_recos <- all_recos[, 1:5]
return(top5_recos)
}
test_function <- top5_recos(ac_bundles)
identical(cos_top5_recos, test_function)
col_mean <- sapply(as.data.frame(ac_bundles), mean)
col_mean_matrix <- t(replicate(nrow(ac_bundles), col_mean))
bundles_col_mc <- as.matrix(ac_bundles - col_mean_matrix)
cor_top5_recos <- top5_recos(bundles_col_mc)
View(cor_top5_recos)
View(cos_top5_recos)
row_mean <- apply(as.data.frame(ac_bundles), 1, mean)
row_mean_matrix <- replicate(ncol(ac_bundles), row_mean)
bundles_row_mc <- as.matrix(ac_bundles - row_mean_matrix)
adj_cos_top5_recos <- top5_recos(bundles_row_mc)
View(adj_cos_top5_recos)
cos_top5_recos['sweetmothersday', ]
cor_top5_recos['sweetmothersday', ]
adj_cos_top5_recos['sweetmothersday', ]
source('F:/IMBA/4th semester/1-business analytics using statistical modeling/business_analytics_using_statistical_modeling/demo_simple_regression.R', encoding = 'UTF-8')
interactive_regression()
interactive_regression()
